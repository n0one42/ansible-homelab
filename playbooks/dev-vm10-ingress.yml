---
# - name: Create VM => dev-vm10-ingress
#   hosts: pve-qotom_env_dev
#   become: true
#   gather_facts: false
#   roles:
#     - role: pve_vm
#       vars:
#         # pve_vm_prune: true  # testing purposes
#         # pve_vm_start_after_create: false
#         pve_vm_obj_to_use: "{{ vm10_ingress }}"  # Has to be the object


- name: Docker Provisioning
  hosts: dev-vm10-ingress
  become: true
  gather_facts: false
  vars:
    dc_traefik_type: "ingress"  # "This is very important to use either: ingress, metrics, ..." This will match many variables and rules for like traefik! Otherwise change it everywhere!
    # dc_traefik_crowdsec_enabled: false
    vm_id: "{{ vm10_ingress.vm_id }}"
  pre_tasks:
    - name: Gather only the hostname fact
      ansible.builtin.setup:
        filter: ansible_hostname
    # ? ensure clock is set / synced otherwise time sensitive things will not work like authelia
    - name: Synchronize system time with NTP
      ansible.builtin.systemd:
        name: systemd-timesyncd.service
        state: restarted
      changed_when: false

    # - name: Debug networks
    #   ansible.builtin.debug:
    #     msg:
    #       - "{{ dc_traefik_net.subnet }}"
    #       - "{{ dc_traefik_net.traefik_ip }}"
    #       - "{{ dc_traefik_net.adguard_ip }}"
    #       - "{{ dc_traefik_net.crowdsec_ip }}"
    #       - "{{ dc_traefik_socketproxy_net.subnet }}"
    #       - "{{ dc_traefik_socketproxy_net.socketproxy_ip }}"
    #       - "{{ dc_traefik_socketproxy_net.traefik_ip }}"
    #       - "{{ dc_authelia_net.subnet }}"
    #       - "{{ dc_authelia_net.authelia_ip }}"
    #       - "{{ dc_authelia_net.traefik_ip }}"
  roles:
    # - role: app_webmin
    # - role: docker_provisioning
    # - role: dc_adguard  # ! must be first if used for correct dns
    # - role: dc_traefik
    # # - role: dc_authentik  # Works perfectly but is overkill for what I need. (extensively tested)
    # - role: dc_authelia # Decided to use authelia. Its lighter and easier to configure than authentik while offering most what I need. (also extensively tested)
    - role: dc_vector
      vars:
        app_name: "standalone" # noqa: var-naming
        dc_vector_standalone: true
        dc_vector_create_with_userns: "{{ dc_grafana_vector_create_with_userns }}"
        dc_vector_image_version: "{{ dc_grafana_vector_image_version }}"
    - role: dc_cadvisor
      vars:
        app_name: "standalone" # noqa: var-naming
        dc_cadvisor_standalone: true
        dc_cadvisor_create_with_userns: "{{ dc_grafana_cadvisor_create_with_userns }}"
        dc_cadvisor_image_version: "{{ dc_grafana_cadvisor_image_version }}"
    # - role: dc_whoami
