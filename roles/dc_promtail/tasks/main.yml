---
# tasks file for roles/dc_promtail
# TODO: Variables which has to be passed through the playbook or on import of this task file
# ! Mandatory variables
  # vars:
  #   app_name: => traefik, portainer, grafana, netbox
# ? Optional variables


  # * --------------------------- App --------------------------- *
- name: Create promtail for --> {{ app_name }}
  vars:
    container_type: "promtail" # => app, db, redis, loki, promtail
    appdata_type_path: "{{ docker_appdata }}/{{ app_name }}/{{ container_type }}" # eg: grafana/promtail
    secrets_type_path: "{{ docker_secrets }}/{{ app_name }}/{{ container_type }}"
    logs_type_path: "{{ docker_logs }}/{{ app_name }}"
    user: "{{ (dc_promtail_create_with_userns | bool) | ternary(dc_promtail_u_g_id + 100000, dc_promtail_u_g_id) }}"
    group: "{{ (dc_promtail_create_with_userns | bool) | ternary(dc_promtail_u_g_id + 100000, dc_promtail_u_g_id) }}"
  block:
    - name: '[Required] container_init role'
      ansible.builtin.import_role:
        name: container_init
      vars:
        container_init_appdata_directories_to_create:
          - "data"


    - name: Install docker compose promtail with inline definition
      community.docker.docker_compose_v2:
        project_name: "{{ app_name }}-promtail" # eg: grafana-promtail
        definition:
          # ! --------------------------- Networks --------------------------- ! #
          networks:
            app_net:
              name: "{{ app_name }}_net"  # eg: grafana_net
              external: true  # indicating that it's a pre-existing network not managed by this Docker Compose file.

          # * ---------------------------- App ------------------------------ * #
          services:
            promtail:
              image: grafana/promtail:{{ dc_promtail_image_version }}
              container_name: "{{ app_name }}-promtail"  # eg: grafana-promtail
              restart: unless-stopped
              security_opt:
                - no-new-privileges:true
              privileged: false
              # userns_mode: "{{ 'host' if dc_promtail_create_with_userns | bool == false else 'remap' }}"
              # user: "{{ dc_promtail_u_g_id }}:{{ dc_promtail_u_g_id }}"
              userns_mode: host
              user: root
              command: -config.file=/etc/promtail/config.yml
              networks:
                app_net: "{{ {'ipv4_address': dc_promtail_net_ip} if dc_promtail_net_ip is defined and dc_promtail_net_ip | length > 0 else {} }}"
              volumes:
                - /var/log:/var/log
                - /var/lib/docker/containers:/var/lib/docker/containers:ro
                - /var/lib/docker/100000.100000:/var/lib/docker/containers:ro
                - /var/run/docker.sock:/var/run/docker.sock
                # - "{{ appdata_type_path }}/data:/promtail"
              #   - "{{ secrets_type_path }}:/run/secrets"
              # environment:


# ! --------------------------- Notes --------------------------- ! #
# Promtail is a log shipper. It reads logs from various sources (such as log files, Docker containers, or syslog) and then forwards or “pushes” them to a Loki instance.
# Loki acts as a log storage and indexing system. It does not actively pull logs from Promtail; instead, it listens for incoming log data that Promtail sends.
