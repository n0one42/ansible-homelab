---
# tasks file for roles/dc_loki
# TODO: Variables which has to be passed through the playbook or on import of this task file
# ! Mandatory variables
  # vars:
  #   app_name: => traefik, portainer, grafana, netbox
# ? Optional variables


  # * --------------------------- App --------------------------- *
- name: Create loki for --> {{ app_name }}
  vars:
    container_type: "loki" # => app, loki, redis
    appdata_type_path: "{{ docker_appdata }}/{{ app_name }}/{{ container_type }}" # eg: grafana/loki
    secrets_type_path: "{{ docker_secrets }}/{{ app_name }}/{{ container_type }}"
    logs_type_path: "{{ docker_logs }}/{{ app_name }}"
    user: "{{ (dc_loki_create_with_userns | bool) | ternary(dc_loki_u_g_id + 100000, dc_loki_u_g_id) }}"
    group: "{{ (dc_loki_create_with_userns | bool) | ternary(dc_loki_u_g_id + 100000, dc_loki_u_g_id) }}"
  block:
    - name: '[Required] container_init role'
      ansible.builtin.import_role:
        name: container_init
      vars:
        container_init_appdata_directories_to_create:
          - "data"
        container_init_templates_to_copy:
          - src: "{{ ansible_hostname }}/loki-docker-config.yml.j2"
            dest: "{{ appdata_type_path }}/loki-docker-config.yml"


    - name: Install docker compose loki with inline definition
      community.docker.docker_compose_v2:
        project_name: "{{ app_name }}-loki" # eg: grafana-loki
        definition:
          # ! --------------------------- Networks --------------------------- ! #
          networks:
            app_net:
              name: "{{ app_name }}_net"  # eg: grafana_net
              external: true  # indicating that it's a pre-existing network not managed by this Docker Compose file.
            traefik_net:
              name: "{{ dc_traefik_net_name }}"  # eg: traefik_net
              external: true  # indicating that it's a pre-existing network not managed by this Docker Compose file.

          # * ---------------------------- App ------------------------------ * #
          services:
            loki:
              image: grafana/loki:{{ dc_loki_image_version }}
              container_name: "{{ app_name }}-loki"  # eg: grafana-loki
              restart: unless-stopped
              security_opt:
                - no-new-privileges:true
              privileged: false
              userns_mode: "{{ 'host' if dc_loki_create_with_userns | bool == false else 'remap' }}"
              user: "{{ dc_loki_u_g_id }}:{{ dc_loki_u_g_id }}"
              # command: -config.file=/etc/loki/loki-docker-config.yml
              networks:
                app_net: "{{ {'ipv4_address': dc_loki_net_ip} if dc_loki_net_ip is defined and dc_loki_net_ip | length > 0 else {} }}"
                traefik_net: "{{ {'ipv4_address': dc_traefik_net_loki_ip} if dc_traefik_net_loki_ip is defined and dc_traefik_net_loki_ip | length > 0 else {} }}"
              # ports:
              #   - "{{ dc_loki_port }}:3100"
              volumes:
                - "{{ appdata_type_path }}/data:/loki"
                - "{{ appdata_type_path }}/loki-docker-config.yml:/etc/loki/local-config.yaml"
              # environment:
              labels:
                traefik.enable: "true"
                # * HTTP Routers
                traefik.http.routers.loki-rtr.entrypoints: "websecure"
                traefik.http.routers.loki-rtr.rule: "Host(`loki.{{ domain_1 }}`)"
                # * Middlewares
                traefik.http.routers.loki-rtr.middlewares: "chain-basic-auth@file" # For Basic HTTP Authentication
                # * HTTP Services
                traefik.http.routers.loki-rtr.service: "loki-svc"
                traefik.http.services.loki-svc.loadbalancer.server.port: "{{ dc_loki_port }}"

# ! --------------------------- Notes --------------------------- ! #
# https://github.com/grafana/loki/blob/main/cmd/loki/loki-docker-config.yaml
# https://grafana.com/docs/loki/latest/configure/examples/configuration-examples/

# http://10.0.90.20:3100/ready    # https://loki.your.dom/ready
# http://10.0.90.20:3100/metrics  # https://loki.your.dom/metrics
