---
# tasks file for roles/dc_influxdb_bitnami
# TODO: Variables which has to be passed through the playbook or on import of this task file
# ! Mandatory variables
  # vars:
  #   app_name: => traefik, portainer, authelia, netbox
  #   bucket_user_pw: => "" # Empty for generated password
  #   bucket_superuser_pw: => "" # Empty for generated password
# ? Optional variables


  # * --------------------------- App --------------------------- *
- name: Create influxdb for --> {{ app_name }}
  vars:
    container_type: "influxdb" # => app, db, redis
    user: "{{ (dc_influxdb_bitnami_create_with_userns | bool) | ternary(1001 + 100000, 1001) }}"  # do not change for this container!
    group: "{{ (dc_influxdb_bitnami_create_with_userns | bool) | ternary(1001 + 100000, 1001) }}" # do not change for this container!
  block:
    - name: '[Required] filesystem_manager role'
      ansible.builtin.import_role:
        name: filesystem_manager
      vars:
        filesystem_manager_appdata_directories_to_create:
          - path: "data"
          # - path: "/opt/bitnami/influxdb/etc"
        filesystem_manager_secret_files_to_create:
          - var_name: dc_influxdb_bitnami_user_pw
            content: "{{ dc_influxdb_bitnami_user_pw | default('') }}"
            type: postgres_password
            set_facts: true  # optional - needed for the app
            # overide_existing: true  # optional
          - var_name: dc_influxdb_bitnami_admin_pw
            content: "Temp#1234" # ! Testing
            # content: "{{ dc_influxdb_bitnami_admin_pw | default('') }}"
            type: postgres_password
            # set_facts: false  # optional
            # overide_existing: false  # optional
          - var_name: dc_influxdb_bitnami_admin_token
            content: "Pur#-rM#0idy@2V4@.nCZ2Ys3QcWhZJWGf@yLactoM30f6x^hpl5wb9%bD#0xEFT" # ! Testing
            # content: "{{ dc_influxdb_bitnami_admin_token | default('') }}"
            type: jwt_secret
            # set_facts: false  # optional
            # overide_existing: false  # optional

    - name: Install docker compose influxdb bitnami with inline definition
      community.docker.docker_compose_v2:
        project_name: "{{ app_name }}-influxdb" # eg: authelia-influxdb
        definition:
          # ! --------------------------- Networks --------------------------- ! #
          networks:
            app_net:
              name: "{{ app_name }}_net"  # eg: authelia_net
              external: true  # indicating that it's a pre-existing network not managed by this Docker Compose file.
            traefik_net:
              name: "{{ dc_traefik_net_name }}"
              external: true  # indicating that it's a pre-existing network not managed by this Docker Compose file.

          # * ---------------------------- App ------------------------------ * #
          services:
            influxdb:
              image: bitnami/influxdb:{{ dc_influxdb_bitnami_image_version }}
              container_name: "{{ app_name }}-influxdb"  # eg: authelia-influxdb
              restart: always
              security_opt:
                - no-new-privileges:true
              privileged: false
              userns_mode: "{{ 'host' if dc_influxdb_bitnami_create_with_userns | bool == false else 'remap' }}"
              # ! by default they uses already 1001 as non root user and this cant be changed!
              networks:
                app_net: "{{ {'ipv4_address': dc_influxdb_bitnami_net_ip} if dc_influxdb_bitnami_net_ip is defined and dc_influxdb_bitnami_net_ip | length > 0 else {} }}"
                traefik_net: "{{ {'ipv4_address': dc_traefik_net_influxdb_ip} if dc_traefik_net_influxdb_ip is defined and dc_traefik_net_influxdb_ip | length > 0 else {} }}"
              # ports:
              #   - "{{ dc_influxdb_bitnami_http_port | default(8086) }}:8086"
              volumes:
                - "{{ appdata_type_path }}/data:/bitnami/influxdb"
                # - "{{ appdata_type_path }}/opt/bitnami/influxdb/etc:/opt/bitnami/influxdb/etc" # ! still not always working...
                # - "{{ appdata_type_path }}/config.yaml:/opt/bitnami/influxdb/etc/config.yaml"
                - "{{ secrets_type_path }}:/run/secrets"
              environment:
                INFLUXDB_DATA_DIR: "/bitnami/influxdb/data"
                INFLUXDB_DATA_WAL_DIR: "/bitnami/influxdb/wal"
                INFLUXDB_META_DIR: "/bitnami/influxdb/meta"
                INFLUXD_CONFIG_PATH: "/opt/bitnami/influxdb/etc/config.yaml"

                INFLUXDB_INIT_MODE: "{{ dc_influxdb_bitnami_init_mode | default('setup') }}"  # Initialization mode for setting up InfluxDB (org, bucket, users).
                INFLUXDB_REPORTING_DISABLED: "{{ dc_influxdb_bitnami_reporting_disabled | default('true') }}"  # Disable InfluxDB reporting (telemetry).
                INFLUXDB_CREATE_USER_TOKEN: "{{ dc_influxdb_bitnami_create_user_token | default('no') }}"  # Whether to create a token for additional users.

                INFLUXDB_HTTP_AUTH_ENABLED: "{{ dc_influxdb_bitnami_http_auth_enabled | default('true') }}"  # Enables HTTP authentication for InfluxDB.
                # INFLUXDB_HTTP_BIND_ADDRESS: "0.0.0.0:8086"  # Bind address for HTTP server (binds to all network interfaces by default).
                INFLUXDB_HTTP_PORT_NUMBER: "{{ dc_influxdb_bitnami_http_port | default(8086) }}"  # Port number used by InfluxDB HTTP server.
                INFLUXDB_HTTP_READINESS_TIMEOUT: "{{ dc_influxdb_bitnami_http_readiness_timeout | default('60') }}"  # Timeout in seconds for the InfluxDB HTTP port to be ready.

                INFLUXDB_ADMIN_BUCKET: "{{ dc_influxdb_bitnami_admin_bucket | default('primary') }}"  # Admin user bucket.
                INFLUXDB_ADMIN_ORG: "{{ dc_influxdb_bitnami_admin_org | default('primary') }}"  # Admin user organization.
                INFLUXDB_ADMIN_RETENTION: "{{ dc_influxdb_bitnami_admin_retention | default('0') }}"  # Retention policy for the admin bucket (0 means infinite retention).
                INFLUXDB_ADMIN_USER: "{{ dc_influxdb_bitnami_admin_user_name | default('admin') }}"  # Admin username.
                INFLUXDB_ADMIN_USER_PASSWORD_FILE: "/run/secrets/dc_influxdb_bitnami_admin_pw"  # Path to admin password file (secure).
                INFLUXDB_ADMIN_USER_TOKEN_FILE: "/run/secrets/dc_influxdb_bitnami_admin_token"  # Path to admin token file (secure).

                INFLUXDB_USER_BUCKET: "{{ dc_influxdb_bitnami_user_bucket_name }}"  # Bucket name for non-admin user.
                INFLUXDB_USER_ORG: "{{ dc_influxdb_bitnami_user_org | default(dc_influxdb_bitnami_org_name | default('homelab')) }}"  # Organization for the non-admin user.
                INFLUXDB_USER: "{{ dc_influxdb_bitnami_user_name }}"  # Additional InfluxDB user for Telegraf or other services.
                INFLUXDB_USER_PASSWORD_FILE: "/run/secrets/dc_influxdb_bitnami_user_pw"  # Path to non-admin user password file (secure).
              labels:
                traefik.enable: "true"
                ## HTTP Routers
                traefik.http.routers.influxdb-rtr.entrypoints: "websecure"
                traefik.http.routers.influxdb-rtr.rule: "Host(`{{ app_name }}-influxdb.{{ domain_1 }}`)"
                ## Middlewares
                traefik.http.routers.influxdb-rtr.middlewares: "chain-no-auth@file"
                # traefik.http.routers.influxdb-rtr.middlewares: "chain-basic-auth@file" # ! Will not work with influxdb since it seams to be a conflict between the basic auth and the influxdb auth
                ## HTTP Services
                traefik.http.routers.influxdb-rtr.service: "influxdb-svc"
                traefik.http.services.influxdb-svc.loadbalancer.server.port: "8086"

# ! --------------------------- Notes --------------------------- ! #
# https://hub.docker.com/r/bitnami/influxdb
# https://docs.influxdata.com/influxdb/v2/get-started/
# ! Important:
# Sometimes it works with uid:gid but sometimes it doesn't... So just use the default 1001:1001 and thats it...

# ! Notes:
# Cant login if using basic auth on the influxdb web ui. Maybe header problem. Need to try it with authelia / authentik instead
