---
# TODO: Variables which has to be passed through the playbook or on import of this task file
  # vars:
  #   app_name: => traefik, portainer, traefik-socketproxy
  #   container_type: => app, db, redis
  #   user => traefik_u_g_id
  #   group => traefik_u_g_id

- name: Handle appdata files & directories
  vars:
    appdata_type_path: "{{ docker_appdata }}/{{ app_name }}/{{ container_type }}"
  block:
    - name: Create container appdata root directory
      ansible.builtin.file:
        path: "{{ docker_appdata }}/{{ app_name }}"
        state: directory
        owner: root
        group: root
        mode: "0555"

    - name: Create container_type specific directory with correct permissions
      ansible.builtin.file:
        path: "{{ appdata_type_path }}" # eg appdata/netbox/app ; appdata/netbox/db ; appdata/netbox/redis
        state: directory
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: "0550"

    - name: Create container specific directories with correct permissions
      ansible.builtin.file:
        path: "{{ appdata_type_path }}/{{ item }}"
        state: directory
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: "0770"  # 0770 for you can't use the directory as a working directory or access files within it, even if you can see the directory contents.
        recurse: "{{ item.recurse | default(false) }}"
      loop: "{{ container_init_appdata_directories_to_create | default([]) }}"

    - name: Create container specific custom directories with correct permissions
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner | default(user) }}"
        group: "{{ item.group | default(group) }}"
        mode: "{{ item.mode }}"
        recurse: "{{ item.recurse | default(false) }}" # To not override permissions but unsure. Just for security reason
      loop: "{{ container_init_custom_directories_to_create | default([]) }}"

    - name: Create files
      ansible.builtin.file:
        dest: "{{ item.dest }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
        state: touch
        access_time: preserve
        modification_time: preserve
      loop: "{{ container_init_files_to_create | default([]) }}"

    - name: Copy all files from a template directory
      when: container_init_templates_in_directory_to_copy | default([]) | length > 0
      block:
        - name: Find all template files in the directory
          delegate_to: localhost
          become: false
          ansible.builtin.find:
            paths: "{{ item.src }}"
            file_type: file
          register: found_templates
          loop: "{{ container_init_templates_in_directory_to_copy }}"

        - name: Copy template files found in the directories
          ansible.builtin.template:
            src: "{{ item.path }}"
            dest: "{{ item_dest | regex_replace('\\.j2$', '') }}"
            owner: "{{ user }}"
            group: "{{ group }}"
            mode: "{{ item.mode | default('0440') }}"
            force: "{{ item.force | default(true) }}"
          loop: "{{ found_templates.results | map(attribute='files') | flatten(levels=1) }}"
          vars:
            item_dest: "{{ container_init_templates_in_directory_to_copy | selectattr('src', 'equalto', item.path | dirname) | map(attribute='dest') | first }}/{{ item.path | basename }}"

    - name: Copy template files
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: "{{ item.mode | default('0440') }}"  # 0550 for executable
        force: "{{ item.force | default(true) }}"
      loop: "{{ container_init_templates_to_copy | default([]) }}"

# ? gets under /run/secrets mounted
- name: Handle secrets files & directories
  when: (container_init_secret_files_to_create | default([]) | length > 0)
  vars:
    secrets_type_path: "{{ docker_secrets }}/{{ app_name }}/{{ container_type }}"
  block:
    - name: Create container secrets root directory
      ansible.builtin.file:
        path: "{{ docker_secrets }}/{{ app_name }}"  # eg netbox
        state: directory
        owner: root
        group: root
        mode: "0500"

    - name: Create container_type specific directory with correct permissions
      ansible.builtin.file:
        path: "{{ secrets_type_path }}" # eg secrets/netbox/app ; secrets/netbox/db ; secrets/netbox/redis
        state: directory
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: "0500"

    - name: Touch secret files
      ansible.builtin.file:
        dest: "{{ secrets_type_path }}/{{ item.filename }}"
        state: touch
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: "{{ item.mode }}"
        access_time: preserve
        modification_time: preserve
      no_log: true
      loop: "{{ container_init_secret_files_to_create | default([]) }}"
      when: item.content | length == 0

    - name: Create secret files
      ansible.builtin.copy:
        content: "{{ item.content }}"
        dest: "{{ secrets_type_path }}/{{ item.filename }}"
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: "{{ item.mode }}"
      no_log: true
      loop: "{{ container_init_secret_files_to_create | default([]) }}"
      when: item.content | length > 0
