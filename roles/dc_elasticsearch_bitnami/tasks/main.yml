---
# tasks file for roles/dc_elasticsearch_bitnami
# TODO: Variables which has to be passed through the playbook or on import of this task file
# ! Mandatory variables
  # vars:
  #   app_name: => traefik, portainer, authelia, netbox
  #   bucket_user_pw: => "" # Empty for generated password
  #   bucket_superuser_pw: => "" # Empty for generated password
# ? Optional variables


  # * --------------------------- App --------------------------- *
- name: Create elasticsearch for --> {{ app_name }}
  vars:
    container_type: "elasticsearch" # => app, db, redis
    user: "{{ (dc_elasticsearch_bitnami_create_with_userns | bool) | ternary(1001 + 100000, 1001) }}"  # do not change for this container!
    group: "{{ (dc_elasticsearch_bitnami_create_with_userns | bool) | ternary(1001 + 100000, 1001) }}" # do not change for this container!
  block:
    - name: '[Required] filesystem_manager role'
      ansible.builtin.import_role:
        name: filesystem_manager
      vars:
        filesystem_manager_appdata_directories_to_create:
          - path: "data"
          # - path: "/opt/bitnami/elasticsearch/etc"
        filesystem_manager_secret_files_to_create:
          - var_name: dc_elasticsearch_bitnami_admin_user_pw
            content: "Temp#1234" # ! Testing
            # content: "{{ dc_elasticsearch_bitnami_admin_user_pw | default('') }}"
            type: postgres_password
            set_facts: true  # optional - needed for the app
            # overide_existing: true  # optional

    - name: Install docker compose elasticsearch bitnami with inline definition
      community.docker.docker_compose_v2:
        project_name: "{{ app_name }}-elasticsearch" # eg: authelia-elasticsearch
        definition:
          # ! --------------------------- Networks --------------------------- ! #
          networks:
            app_net:
              name: "{{ app_name }}_net"  # eg: authelia_net
              external: true  # indicating that it's a pre-existing network not managed by this Docker Compose file.
            traefik_net:
              name: "{{ dc_traefik_net_name }}"
              external: true  # indicating that it's a pre-existing network not managed by this Docker Compose file.

          # * ---------------------------- App ------------------------------ * #
          services:
            elasticsearch:
              image: bitnami/elasticsearch:{{ dc_elasticsearch_bitnami_image_version }}
              container_name: "{{ app_name }}-elasticsearch"  # eg: authelia-elasticsearch
              restart: always
              security_opt:
                - no-new-privileges:true
              privileged: false
              userns_mode: "{{ 'host' if dc_elasticsearch_bitnami_create_with_userns | bool == false else 'remap' }}"
              # ! by default they uses already 1001 as non root user and this cant be changed!
              deploy:
                resources:
                  limits:
                    cpus: '0.50'
                    memory: '3G'
                  reservations:
                    cpus: '0.25'
              networks:
                app_net: "{{ {'ipv4_address': dc_elasticsearch_bitnami_net_ip} if dc_elasticsearch_bitnami_net_ip is defined and dc_elasticsearch_bitnami_net_ip | length > 0 else {} }}"
                traefik_net: "{{ {'ipv4_address': dc_traefik_net_elasticsearch_ip} if dc_traefik_net_elasticsearch_ip is defined and dc_traefik_net_elasticsearch_ip | length > 0 else {} }}"
              ports:
                - "{{ dc_elasticsearch_bitnami_http_port | default(9200) }}:9200"
                - "{{ dc_elasticsearch_bitnami_transport_port | default(9300) }}:9300"
              volumes:
                - "{{ appdata_type_path }}/data:/bitnami/elasticsearch/data"
                - "{{ secrets_type_path }}:/run/secrets"
              environment:
                ES_JAVA_OPTS: "-Xms2g -Xmx2g" # also memory consumption and so on
                ELASTICSEARCH_USERNAME: "{{ dc_elasticsearch_bitnami_admin_user_name }}" # default elastic
                ELASTICSEARCH_PASSWORD_FILE: "/run/secrets/dc_elasticsearch_bitnami_admin_user_pw"  # Default: bitnami
              # labels:
              #   traefik.enable: "true"
              #   ## HTTP Routers
              #   traefik.http.routers.elasticsearch-rtr.rule: "Host(`{{ app_name }}-elasticsearch.{{ domain_1 }}`)"
              #   ## Middlewares
              #   traefik.http.routers.elasticsearch-rtr.middlewares: "chain-no-auth@file"
              #   # traefik.http.routers.elasticsearch-rtr.middlewares: "chain-basic-auth@file" # ! Will not work with elasticsearch since it seams to be a conflict between the basic auth and the elasticsearch auth
              #   ## HTTP Services
              #   traefik.http.routers.elasticsearch-rtr.service: "elasticsearch-svc"
              #   traefik.http.services.elasticsearch-svc.loadbalancer.server.port: "8086"

# ! --------------------------- Notes --------------------------- ! #
# https://hub.docker.com/r/bitnami/elasticsearch
# ! Important:
# Sometimes it works with uid:gid but sometimes it doesn't... So just use the default 1001:1001 and thats it...

# ! Notes:
# Cant login if using basic auth on the elasticsearch web ui. Maybe header problem. Need to try it with authelia / authentik instead

# http://10.0.90.20:9200/ <-- to know if it's working
# http://10.0.90.20:9300/
