# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 30s # 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# ! LABELS NEEDS TO BE SET PROPERLY !!!!!

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
# ! ---- Scrape config for ingress vm ---- ! #
  - job_name: "vector-ingress"  # represents job label
    scheme: https
    tls_config:
      insecure_skip_verify: {{ dc_traefik_acme_staging_mode }}
    # basic_auth:
    #   username: "{{ demo_auth_user }}"
    #   password: "{{ demo_auth_user_pw }}"
    metrics_path: "/metrics"  # Needed to match exactly the route and rule of traefik with no authentication required for this service
    # metrics_path: "/ingress/vector/metrics" # ? Just if usng traefik to traefik with forwarding
    static_configs:
      # - targets: ["traefik-metrics.{{ domain_1 }}"] # ? Just if usng traefik to traefik with forwarding
      - targets: ["vector-ingress.{{ domain_1 }}"]
        labels:
          # job: # same as job_name
          job_type: "system_metrics"
          parser: "vector_prometheus"
          service: "vector"
          host: "{{ dc_dmz_net_vm10_ingress_hostname }}"
          instance: "vector-ingress.{{ domain_1 }}"

  - job_name: "cadvisor-ingress"  # represents job label
    scheme: https
    tls_config:
      insecure_skip_verify: {{ dc_traefik_acme_staging_mode }}
    # basic_auth:
    #   username: "{{ demo_auth_user }}"
    #   password: "{{ demo_auth_user_pw }}"
    metrics_path: "/metrics"  # Needed to match exactly the route and rule of traefik with no authentication required for this service
    # metrics_path: "/ingress/cadvisor/metrics"
    static_configs:
      # - targets: ['traefik-metrics.{{ domain_1 }}']
      - targets: ["cadvisor-ingress.{{ domain_1 }}"]
        labels:
          job_type: "docker_metrics"
          parser: "cadvisor_prometheus"
          service: "cadvisor"
          host: "{{ dc_dmz_net_vm10_ingress_hostname }}"
          instance: "cadvisor-ingress.{{ domain_1 }}"


# ! ---- Scrape config for metrics vm (local) ---- ! #
  - job_name: "prometheus-metrics" # represents job label
    static_configs:
      - targets: ["localhost:{{ dc_prometheus_port }}"]
        labels:
          job_type: "prometheus_metrics"
          parser: "prometheus_self"
          service: "prometheus"
          host: "{{ dc_dmz_net_vm20_metrics_hostname }}"
          instance: "prometheus-metrics.{{ domain_1 }}"

  # ? using vector instead of node exporter
  - job_name: "vector-metrics"  # represents job label
    static_configs:
      - targets: ["{{ dc_grafana_net_vector_ip }}:{{ dc_vector_prometheus_exporter_port }}"]
        labels:
          job_type: "system_metrics"
          parser: "vector_prometheus"
          service: "vector"
          host: "{{ dc_dmz_net_vm20_metrics_hostname }}"
          instance: "vector-metrics.{{ domain_1 }}"

  - job_name: "cadvisor-metrics"  # represents job label
    static_configs:
      - targets: ["{{ dc_grafana_net_cadvisor_ip }}:{{ dc_cadvisor_port }}"]
        labels:
          job_type: "docker_metrics"
          parser: "cadvisor_prometheus"
          service: "cadvisor"
          host: "{{ dc_dmz_net_vm20_metrics_hostname }}"
          instance: "cadvisor-metrics.{{ domain_1 }}"

  # ? To much overhead and not rly needed
  # - job_name: "whats-up-docker-{{ dc_traefik_type }}" # represents job label
  #   static_configs:
  #     - targets: ["{{ dc_traefik_net_wud_ip }}:{{ dc_wud_port }}"]

  # ? using vector instead of promtail
  # - job_name: "promtail"
  #   static_configs:
  #     - targets: ["{{ dc_grafana_net_promtail_ip }}:{{ dc_grafana_promtail_port }}"]


# ! ---- Scrape config for application-1 vm ---- ! #
  - job_name: "vector-application-1"  # represents job label
    scheme: https
    tls_config:
      insecure_skip_verify: {{ dc_traefik_acme_staging_mode }}
    # basic_auth:
    #   username: "{{ demo_auth_user }}"
    #   password: "{{ demo_auth_user_pw }}"
    metrics_path: "/metrics"  # Needed to match exactly the route and rule of traefik with no authentication required for this service
    # metrics_path: "/ingress/vector/metrics" # ? Just if usng traefik to traefik with forwarding
    static_configs:
      # - targets: ["traefik-metrics.{{ domain_1 }}"] # ? Just if usng traefik to traefik with forwarding
      - targets: ["vector-application-1.{{ domain_1 }}"]
        labels:
          # job: # same as job_name
          job_type: "system_metrics"
          parser: "vector_prometheus"
          service: "vector"
          host: "{{ dc_dmz_net_vm31_application_1_hostname }}"
          instance: "vector-application-1.{{ domain_1 }}"

  - job_name: "cadvisor-application-1"  # represents job label
    scheme: https
    tls_config:
      insecure_skip_verify: {{ dc_traefik_acme_staging_mode }}
    # basic_auth:
    #   username: "{{ demo_auth_user }}"
    #   password: "{{ demo_auth_user_pw }}"
    metrics_path: "/metrics"  # Needed to match exactly the route and rule of traefik with no authentication required for this service
    # metrics_path: "/ingress/cadvisor/metrics"
    static_configs:
      # - targets: ['traefik-metrics.{{ domain_1 }}']
      - targets: ["cadvisor-application-1.{{ domain_1 }}"]
        labels:
          job_type: "docker_metrics"
          parser: "cadvisor_prometheus"
          service: "cadvisor"
          host: "{{ dc_dmz_net_vm31_application_1_hostname }}"
          instance: "cadvisor-application-1.{{ domain_1 }}"


# ! ---- Scrape config for multimedia-1 vm ---- ! #
  - job_name: "vector-multimedia-1"  # represents job label
    scheme: https
    tls_config:
      insecure_skip_verify: {{ dc_traefik_acme_staging_mode }}
    # basic_auth:
    #   username: "{{ demo_auth_user }}"
    #   password: "{{ demo_auth_user_pw }}"
    metrics_path: "/metrics"  # Needed to match exactly the route and rule of traefik with no authentication required for this service
    # metrics_path: "/ingress/vector/metrics" # ? Just if usng traefik to traefik with forwarding
    static_configs:
      # - targets: ["traefik-metrics.{{ domain_1 }}"] # ? Just if usng traefik to traefik with forwarding
      - targets: ["vector-multimedia-1.{{ domain_1 }}"]
        labels:
          # job: # same as job_name
          job_type: "system_metrics"
          parser: "vector_prometheus"
          service: "vector"
          host: "{{ dc_dmz_net_vm41_multimedia_1_hostname }}"
          instance: "vector-multimedia-1.{{ domain_1 }}"

  - job_name: "cadvisor-multimedia-1"  # represents job label
    scheme: https
    tls_config:
      insecure_skip_verify: {{ dc_traefik_acme_staging_mode }}
    # basic_auth:
    #   username: "{{ demo_auth_user }}"
    #   password: "{{ demo_auth_user_pw }}"
    metrics_path: "/metrics"  # Needed to match exactly the route and rule of traefik with no authentication required for this service
    # metrics_path: "/ingress/cadvisor/metrics"
    static_configs:
      # - targets: ['traefik-metrics.{{ domain_1 }}']
      - targets: ["cadvisor-multimedia-1.{{ domain_1 }}"]
        labels:
          job_type: "docker_metrics"
          parser: "cadvisor_prometheus"
          service: "cadvisor"
          host: "{{ dc_dmz_net_vm41_multimedia_1_hostname }}"
          instance: "cadvisor-multimedia-1.{{ domain_1 }}"

# ! --------------------------- Notes --------------------------- ! #
# ! Except for Prometheus itself which can use localhost, all other containers have to be defined by the IP of the internal network ips eg {{ dc_grafana_net_cadvisor_ip }} to work.
# ! To verify if the setup is successful, check the Grafana GUI under Explore --> Metrics. The data source should be Prometheus and the Job should be cadvisor-{{ dc_traefik_type }}. If it's not present, it indicates a failure.
