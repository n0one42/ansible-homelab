# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  # - job_name: "prometheus"

  #   # metrics_path defaults to '/metrics'
  #   # scheme defaults to 'http'.

  #   static_configs:
  #     - targets: ["localhost:9090"]

  # # Scrape config for Node Exporter
  # - job_name: 'external_node_exporter'
  #   scheme: https
  #   tls_config:
  #     insecure_skip_verify: {{ dc_prometheus_nodeexporter_insecure_skip_verify }}
  #   basic_auth:
  #     username: "{{ dc_prometheus_nodeexporter_basic_auth_user }}"
  #     password: "{{ dc_prometheus_nodeexporter_basic_auth_password }}"
  #   static_configs:
  #     - targets: ['nodeexporter-ingress.casalex.de']
  #   metrics_path: /metrics

  - job_name: "node-exporter-metrics"
    static_configs:
      - targets: ["{{ dc_grafana_net_nodeexporter_ip }}:9100"]

  # - job_name: "node-exporter-application-1"
  #   scheme: https
  #   tls_config:
  #     insecure_skip_verify: {{ dc_prometheus_nodeexporter_insecure_skip_verify }}
  #   basic_auth:
  #     username: "{{ dc_prometheus_nodeexporter_basic_auth_user }}"
  #     password: "{{ dc_prometheus_nodeexporter_basic_auth_password }}"
  #   metrics_path: '/metrics'
  #   static_configs:
  #     - targets: ["https://nodeexporter-application-1.{{ domain_1 }}"]
