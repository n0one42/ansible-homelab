sources:
# ! Logs
  my_docker_logs:
    type: docker_logs
    # include_containers:
    #   - "grafana"
    # include_labels: [] # It will only include containers containing these labels

  traefik_access_log:
    type: "file"
    include:
      - "/opt/docker/logs/traefik/app/access.log"
    # ignore_older: 86400

  traefik_log:
    type: "file"
    include:
      - "/opt/docker/logs/traefik/app/traefik.log"
    # ignore_older: 86400


transforms:
  remove_label:
    type: remap
    inputs:
      - my_docker_logs
    source: |

      # message_parsed = 
      #   parse_json(.message) ??
      #   parse_logfmt(.message) ??
      #   parse_syslog(.message) ??
      #   parse_common_log(.message) ??
      #   null

      # if message_parsed != null {
      #   .mp = message_parsed
      # }

      del(.container_id)
      del(.container_created_at)
      del(.image)
      del(.host)

      .level, err = parse_regex(.message, r'(?i)\b(?P<level>err|error|inf|info|wrn|warn|warning|dbg|debug|trc|trace|crit|critical|fatal)\b').level
      if err == null {
        .level = downcase(.level)
        # Map abbreviations and full names to standardized log levels
        if .level == "info" || .level == "inf" {
          .level = "info"
        } else if .level == "warn" || .level == "wrn" || .level == "warning" {
          .level = "warn"
        } else if .level == "error" || .level == "err" {
          .level = "error"
        } else if .level == "debug" || .level == "dbg" {
          .level = "debug"
        } else if .level == "trace" || .level == "trc" {
          .level = "trace"
        } else if .level == "critical" || .level == "crit" || .level == "fatal" {
          .level = "critical"
        }
      }

      del(.label)

    # del(.highlight)
    # del(.container_created_at)
    # del(.image)
    # del(.sort)
    # del(.label."com.docker.compose.project") # ! This is needed for the docker_logs source except you remove all the labels
    # del(.label."com.docker.compose.service")
    # del(.label."com.docker.compose.project.config-files")
    # del(.label."com.docker.compose.project.working_dir")

  # prepare_traefik_logs:
  #   type: remap
  #   inputs:
  #     - traefik_file_logs
  #   # source: |
  #   #   del(.container_id)
  #   #   del(.container_created_at)
  #   #   del(.image)
  #   #   del(.host)

  traefik_access_log_parser:
    type: "remap"
    inputs: ["traefik_access_log"]
    source: |
      del(.host)
      del(.source_type)
      .container_name = "traefik"
      .level = "info"
      .file = split!(.file, "/")[-1]

  traefik_log_parser:
    type: "remap"
    inputs: ["traefik_log"]
    source: |
      del(.host)
      del(.source_type)
      .container_name = "traefik"
      .file = split!(.file, "/")[-1]
      .level, err = parse_regex(.message, r'(?i)\b(?P<level>err|inf|wrn|dbg|trc|crit)\b').level
      if err == null {
        .level = downcase(.level)
        # Map abbreviations to full log levels
        if .level == "inf" {
          .level = "info"
        } else if .level == "wrn" {
          .level = "warn"
        } else if .level == "err" {
          .level = "error"
        } else if .level == "dbg" {
          .level = "debug"
        } else if .level == "trc" {
          .level = "trace"
        } else if .level == "crit" {
          .level = "critical"
        }
      }

